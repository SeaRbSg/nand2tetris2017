// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,
             sel[0]=address[0],
             sel[1]=address[1],
             sel[2]=address[2],
             a=loadblock0,
             b=loadblock1,
             c=loadblock2,
             d=loadblock3,
             e=loadblock4,
             f=loadblock5,
             g=loadblock6,
             h=loadblock7);

    RAM8(in=in,
         load=loadblock0,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],
         out=block0);
    RAM8(in=in,
         load=loadblock1,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],
         out=block1);
    RAM8(in=in,
         load=loadblock2,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],
         out=block2);
    RAM8(in=in,
         load=loadblock3,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],
         out=block3);
    RAM8(in=in,
         load=loadblock4,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],
         out=block4);
    RAM8(in=in,
         load=loadblock5,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],
         out=block5);
    RAM8(in=in,
         load=loadblock6,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],
         out=block6);
    RAM8(in=in,
         load=loadblock7,
         address[0]=address[3],
         address[1]=address[4],
         address[2]=address[5],out=block7);

    Mux8Way16(a=block0,
              b=block1,
              c=block2,
              d=block3,
              e=block4,
              f=block5,
              g=block6,
              h=block7,
              sel[0]=address[0],
              sel[1]=address[1],
              sel[2]=address[2],
              out=out);
}
