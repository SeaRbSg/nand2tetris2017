// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/**
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:

    // Stage 1: raw

    // Not(in=sel,       out=w1);
    // And(a=w1,   b=a,  out=w2);
    // And(a=sel,  b=b,  out=w3);
    // Or(a=w2,    b=w3, out=out);

    // Stage 2: convert to Nor

    // // Not(in=sel, out=w1);
    // Nor(a=sel, b=sel, out=w1);
    //
    // // And(a=w1, b=a, out=w2);
    // Nor(a=w1, b=w1, out=i1);
    // Nor(a=a, b=a, out=i2);
    // Nor(a=i1, b=i2, out=w2);
    //
    // // And(a=sel, b=b, out=w3);
    // Nor(a=sel, b=sel, out=i3);
    // Nor(a=b, b=b, out=i4);
    // Nor(a=i3, b=i4, out=w3);
    //
    // // Or(a=w2, b=w3, out=out);
    // Nor(a=w2, b=w3, out=i5);
    // Nor(a=i5, b=i5, out=out);

    // Stage 3: optimize out not(not(x)) -> x, sel in this case

    // // And(a=!sel, b=a, out=w2);
    // Nor(a=a, b=a, out=i2);
    // Nor(a=sel, b=i2, out=w2);
    //
    // // And(a=sel, b=b, out=w3);
    // Nor(a=sel, b=sel, out=i3);
    // Nor(a=b, b=b, out=i4);
    // Nor(a=i3, b=i4, out=w3);
    //
    // // Or(a=w2, b=w3, out=out);
    // Nor(a=w2, b=w3, out=i5);
    // Nor(a=i5, b=i5, out=out);

    // Stage 4: I'm notting all inputs and the output, remove

    Nor(a=a, b=sel, out=w1);

    Nor(a=sel, b=sel, out=i1);
    Nor(a=i1, b=b, out=w2);

    Nor(a=w1, b=w2, out=out);
}
