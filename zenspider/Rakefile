CHAPTERS = %w[01 02 03/a 03/b]

task :default => :run

task :run => :test

task :shell do
  n = ENV["N"] or CHAPTERS.last
  system docker_cmd n
end

task :test do
  f = ENV["F"]

  if f then
    n = File.dirname f
    f = File.basename f, ".tst"
    run %(#{docker_cmd n} /bin/bash -c 'printf "%10s: " #{f}; ./tools/HardwareSimulator.sh /workspace/#{f}.tst')
  else
    n = ENV["N"] or CHAPTERS.last
    run %(#{docker_cmd n} /bin/bash -c 'for F in `find /workspace -name \\*.tst`; do printf "%10s: " $(basename $F .tst); ./tools/HardwareSimulator.sh $F; done')
  end
end

require "pathname"
TOP = Pathname.new Dir.pwd

CHAPTERS.each do |n|
  task "link#{n}" do
    Dir.chdir n do
      here = Pathname.new Dir.pwd
      dir = (TOP / "../projects/#{n}").relative_path_from here

      fs = Dir["#{dir}/*.{cmp,tst}"]
      fs.reject! { |f| bf = File.basename f; File.exist? "#{bf}" }
      ln_s fs, "." unless fs.empty?
    end
  end

  task "copy#{n}" do
    Dir.chdir n do
      fs = Dir["#{TOP}/../projects/#{n}/*.hdl"]
      fs.reject! { |f| bf = File.basename f; File.exist? "#{bf}" }
      cp fs, "." unless fs.empty?
    end
  end

  task :link => "link#{n}"
  task :copy => "copy#{n}"
end

task :clean do
  files =
    Dir["**/*~", "**/*.out"] +
    Dir["**/*"].select { |f| File.symlink? f }
  rm_f files unless files.empty?
end

task :docker do
  system "open -a Docker"
  print "waiting for docker"
  until system "docker info &> /dev/null" do
    print "."
    sleep 1
  end
  puts "done"
end

def run cmd
  system cmd
end

def docker_cmd n
  base_dir = File.expand_path "#{Dir.pwd}/.."
  user_dir = File.expand_path Dir.pwd

  cmd = [
         "docker",
         "run",
         "-v", "#{user_dir}/#{n}:/workspace",
         "-v", "#{base_dir}/tools:/tools",
         "-v", "#{base_dir}/projects:/projects",
         "--rm",
         "-it",
         "searbsg/nand2tetris2017",
        ].flatten.compact

  cmd.join " "
end
